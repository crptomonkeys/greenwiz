name: Tests

on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.11']
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up python ${{ matrix.python-version}}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Restore cache if present
      uses: actions/cache/restore@v3
      id: cache_restore
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: |
        pip install poetry==2.0.0
        poetry install

    - name: Save cache if not found
      uses: actions/cache/save@v3
      id: cache_save
      with:
       path: ${{ env.pythonLocation }}
       key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      if: steps.cache_restore.outputs.cache-hit != 'true'

    - name: Run flake8
      run: |
        poetry run flake8 greenwiz tests
      
    - name: Create mypy cache directory
      run: mkdir -p .mypy_cache

    - name: Run mypy
      run: |
        poetry run mypy greenwiz --install-types --non-interactive --cache-dir=.mypy_cache
        poetry run mypy greenwiz --ignore-missing-imports --cache-dir=.mypy_cache
